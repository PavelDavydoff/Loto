import kotlin.random.Random

 // создайте класс Card, который содержит в конструкторе одно поле numbers
class Card(val numbers: MutableMap<Int, MutableSet<Int>>){
    
}
     // поле numbers — это Map, в которой в качестве ключа номер ряда (1 - 3), а в качестве значения набор чисел
     // набор чисел должен уметь хранить только уникальные значения и в процессе работы программы должен уметь удалять из себя числа
     // подумайте, какая структура данных лучше всего подойдёт для этой цели

 // создайте класс Person, который имеет лишь одно поле в конструкторе — строку name
 class Person(val name: String){
     init{
         val card = createCard()
     }
     fun createCard(): Card {
         
         var temp1 = HashSet<Int>(5)
         var temp2 = HashSet<Int>(5)
         var temp3 = HashSet<Int>(5)
         
         for (i in 0..4){
             while(true){
             var v = Random.nextInt(1, 100)
             if (temp1.add(v)) break
             }
             }
         
         for (i in 0..4){
             while(true){
             var v = Random.nextInt(1, 100)
             if (temp2.add(v) && !temp1.contains(v)) break
             }
             }
         
         for (i in 0..4){
             while(true){
             var v = Random.nextInt(1, 100)
             if (temp3.add(v) && !temp1.contains(v) && !temp2.contains(v)) break
             }
             }
        var result: MutableMap<Int, MutableSet<Int>> = mutableMapOf(1 to temp1, 2 to temp2, 3 to temp3)
        return Card(result)
         }
         
     }
 
     // в теле класса создайте поле card класса Card. При создании экземпляра класса оно должно генерироваться с помощью метода createCard()

     // метод createCard() должен возвращать объект класса Card
     
     // карточка должна содержать в себе 15 случайных чисел. Числа должны быть распределены в 3 ряда по 5 штук в каждом и не повторяться
     // числа в карточки должны быть от 1 до 99 включительно. Для генерации чисел можно использовать функцию Random.nextInt()
