import kotlin.random.Random

 // создайте класс Card, который содержит в конструкторе одно поле numbers
class Card(val numbers: MutableMap<Int, HashSet<Int>>){
    
}
     // поле numbers — это Map, в которой в качестве ключа номер ряда (1 - 3), а в качестве значения набор чисел
     // набор чисел должен уметь хранить только уникальные значения и в процессе работы программы должен уметь удалять из себя числа
     // подумайте, какая структура данных лучше всего подойдёт для этой цели

 // создайте класс Person, который имеет лишь одно поле в конструкторе — строку name
 class Person(val name: String){
     init{
         var card = createCard()
     }
 }
     // в теле класса создайте поле card класса Card. При создании экземпляра класса оно должно генерироваться с помощью метода createCard()

     // метод createCard() должен возвращать объект класса Card
     fun createCard(): Card {
         var result: MutableMap<Int, HashSet<Int>> = HashMap()
         
         for (k in 1..3){
             
             var hashSet = HashSet<Int>(5)
             for(v in hashSet){
                 
                 while(true){
                 var vv = Random.nextInt(1,99)
                 if (!hashSet.contains(vv)) {
                     hashSet.add(vv)
                     break
                     }
                 }

             }
             
             result.put(k, hashSet)
         }
         return Card(result)
     }
     // карточка должна содержать в себе 15 случайных чисел. Числа должны быть распределены в 3 ряда по 5 штук в каждом и не повторяться
     // числа в карточки должны быть от 1 до 99 включительно. Для генерации чисел можно использовать функцию Random.nextInt()
